#!/bin/bash

# Debug, echoes every command
#set -x

maybeEcho() {
  local message="${1:-}"
  if [ "${QUIET_ENV:-false}" != "true" ]
    then
    echo "${message}"
  fi
}

maybeEcho
maybeEcho 'Setup environment ⚙️'
maybeEcho

if [ -z "${BASH_ARGV:-}" ]
  then
  echo 'Error: this script must be invoked via `source`:'
  echo "  source $0"
  echo
  exit 1
fi

BUILD_DIR="$(pwd)"
# The buildpack dir is two directories up from this script.
# Using `BASH_ARGS` here because this script is meant to be called
# with bash's `source` function.
BP_DIR="$(cd $(dirname ${BASH_ARGV[0]}); cd ../..; pwd)"

if [ -f "$BUILD_DIR/.env" ]
  then
  maybeEcho '-----> Loading .env file'
  for LINE in `cat $BUILD_DIR/.env`
  do
    eval "export $LINE"
  done
fi

maybeEcho '       Parsing PIO_ELASTICSEARCH_URL'
source "$BP_DIR/.profile.d/pio-elasticsearch.sh"

maybeEcho '       Parsing DATABASE_URL'
source "$BP_DIR/.profile.d/pio-postgres.sh"

if [ -z "${PIO_ORIGINAL_PATH:-}" ]
  then
  export PIO_ORIGINAL_PATH=$PATH
fi
maybeEcho '-----> Updating $PATH'
export PATH=$BUILD_DIR/bin:$BUILD_DIR/PredictionIO-dist/bin:$BUILD_DIR/PredictionIO-dist/sbt:$PIO_ORIGINAL_PATH

maybeEcho '-----> Rendering configs'
if [ -f "$BUILD_DIR/config/pio-env.sh" ]
  then
  maybeEcho '       + pio-env.sh (from custom config/pio-env.sh)'
  cp "$BUILD_DIR/config/pio-env.sh" "$BUILD_DIR/PredictionIO-dist/conf/pio-env.sh"
fi

core_site_template=$BUILD_DIR/PredictionIO-dist/conf/core-site.xml.erb
custom_core_site_template=$BUILD_DIR/config/core-site.xml.erb
elasticsearch_template=$BUILD_DIR/PredictionIO-dist/conf/elasticsearch.yml.erb
custom_elasticsearch_template=$BUILD_DIR/config/elasticsearch.yml.erb
spark_template=$BUILD_DIR/PredictionIO-dist/vendors/spark-hadoop/conf/spark-defaults.conf.erb
custom_spark_template=$BUILD_DIR/config/spark-defaults.conf.erb

if [ -f "$custom_core_site_template" ]
  then
  maybeEcho '       + core-site.xml (Hadoop; from custom config/core-site.xml.erb)'
  erb $custom_core_site_template > $BUILD_DIR/PredictionIO-dist/conf/core-site.xml
elif [ -f "$core_site_template" ]
  then
  maybeEcho '       + core-site.xml (Hadoop)'
  erb $core_site_template > $BUILD_DIR/PredictionIO-dist/conf/core-site.xml
fi

if [ -f "$custom_elasticsearch_template" ]
  then
  maybeEcho '       + elasticsearch.yml (from custom config/elasticsearch.yml.erb)'
  erb $custom_elasticsearch_template > $BUILD_DIR/PredictionIO-dist/conf/elasticsearch.yml
elif [ -f "$elasticsearch_template" ]
  then
  maybeEcho '       + elasticsearch.yml'
  erb $elasticsearch_template > $BUILD_DIR/PredictionIO-dist/conf/elasticsearch.yml
fi

if [ -f "$custom_spark_template" ]
  then
  maybeEcho '       + spark-defaults.conf (from custom config/spark-defaults.conf.erb)'
  erb $custom_spark_template > $BUILD_DIR/PredictionIO-dist/vendors/spark-hadoop/conf/spark-defaults.conf
elif [ -f "$spark_template" ]
  then
  maybeEcho '       + spark-defaults.conf'
  erb $spark_template > $BUILD_DIR/PredictionIO-dist/vendors/spark-hadoop/conf/spark-defaults.conf
fi

#env | grep PIO_

echo 'Environment loaded 🚀'
maybeEcho